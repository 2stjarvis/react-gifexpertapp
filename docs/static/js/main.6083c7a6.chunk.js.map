{"version":3,"sources":["Components/AddCategory.js","helpers/getGifs.js","Components/GifGridItem.js","Components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","key","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAaA,OACI,sBAAMC,SATW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAO,IACxBR,GAAc,SAAAS,GAAI,OAAGP,GAAH,mBAAiBO,OACnCN,EAAc,MAKlB,SAEI,uBACAO,KAAK,OACLC,MAAOT,EACPU,SAlBW,SAACP,GAChBF,EAAcE,EAAEQ,OAAOF,a,+BCLlBG,EAAO,uCAAC,WAAOC,GAAP,qBAAAC,EAAA,6DAEXC,EAFW,iDAEmCC,UAAUH,GAF7C,+DAISI,MAAMF,GAJf,8BAIqBG,OAJrB,uBAIVC,EAJU,EAIVA,KAIDC,EAAMD,EAAKE,KAAI,SAAAC,GAAM,IAAD,EACtB,MAAM,CACFC,GAAGD,EAAIC,GACPC,MAAMF,EAAIE,MACVT,IAAG,UAACO,EAAIG,cAAL,aAAC,EAAYC,iBAAiBX,QAZxB,kBAeVK,GAfU,2CAAD,sDCAPO,EAAc,SAAC,GAAiB,IAAhBH,EAAe,EAAfA,MAAMT,EAAS,EAATA,IAC/B,OACI,sBAAKa,UAAU,+DAAf,UACI,qBAAKC,IAAKd,EAAKe,IAAKN,IACpB,4BAAIA,QCFHO,EAAU,SAAC,GAAgB,IAAflB,EAAc,EAAdA,SAGrB,ECJwB,SAACA,GACzB,MAA0Bd,mBAAS,CAC/BoB,KAAK,GACLa,SAAQ,IAFZ,mBAAOC,EAAP,KAAcC,EAAd,KAgBA,OAVAC,qBAAU,WACNvB,EAAQC,GACPuB,MAAK,SAAAC,GACFH,EAAS,CACLf,KAAKkB,EACLL,SAAQ,SAGjB,CAACnB,IAEGoB,EDbqBK,CAAazB,GAA7BY,EAAZ,EAAON,KAAYa,EAAnB,EAAmBA,QAGnB,OACI,qCACI,oBAAIJ,UAAU,sBAAd,SAAqCf,IACpCmB,GAAW,4CACZ,qBAAKJ,UAAU,YAAf,gBAEQH,QAFR,IAEQA,OAFR,EAEQA,EAAQJ,KAAI,SAAAC,GAAG,OACX,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEdxBgB,EAAe,WAGxB,MAAoCxC,mBAAS,CAAC,WAA9C,mBAAOyC,EAAP,KAAmB1C,EAAnB,KAMA,OACI,qCACI,gDACA,cAAC,EAAD,CAAaA,cAAeA,IAE5B,uBAEA,6BAEQ0C,EAAWnB,KAAI,SAACR,EAAS4B,GAAV,OACX,cAAC,EAAD,CAEI5B,SAAUA,GADLA,Y,MCnBjC6B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.6083c7a6.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setinputValue] = useState('');\r\n    const handleChange=(e)=>{\r\n        setinputValue(e.target.value);\r\n    }\r\n\r\n    const handleSumbit = (e)=>{\r\n        e.preventDefault();\r\n        if(inputValue.trim().length>2){\r\n            setCategories(cats=>[inputValue,...cats]);\r\n            setinputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSumbit}>\r\n\r\n            <input\r\n            type=\"text\"\r\n            value={inputValue}\r\n            onChange={handleChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes={\r\n    setCategories:PropTypes.func.isRequired,\r\n}","\r\n\r\nexport const getGifs=async (category)=>{\r\n\r\n    const url=`https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=2frctLPG1Vu5KkAGYLPYAWGiyB3il7HJ`;\r\n\r\n    const {data}=await (await fetch(url)).json();\r\n\r\n    //const {data} =await resp.json();\r\n\r\n    const gifs= data.map(img=>{\r\n        return{\r\n            id:img.id,\r\n            title:img.title,\r\n            url:img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({title,url}) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__bounceInUp animate__delay-2s\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n\r\n    const {data:images,loading}=useFetchGifs(category);\r\n\r\n    \r\n    return (\r\n        <>\r\n            <h3 className=\"animate__bounceInUp\">{category}</h3>\r\n            {loading && <p>Cargando...</p>}\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images?.map(img=>(\r\n                        <GifGridItem \r\n                            key={img.id}\r\n                            {...img}\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading:true,\r\n    });\r\n\r\n    \r\n    useEffect(() => {\r\n        getGifs(category)  \r\n        .then(imgs=>{\r\n            setState({\r\n                data:imgs,\r\n                loading:false,\r\n            })\r\n        })      \r\n    }, [category]);\r\n\r\n    return state\r\n}\r\n","import React,{useState} from \"react\";\r\nimport {AddCategory} from './Components/AddCategory';\r\nimport { GifGrid } from \"./Components/GifGrid\";\r\n\r\nexport const GifExpertApp = ()=>{\r\n\r\n    // const categories = ['Futbol','Musica','Anime'];\r\n    const [categories, setCategories] = useState(['Futbol']);\r\n\r\n\r\n    // const handleAdd=()=>{\r\n    //     setCategories([...categories,'kjsdhf']);\r\n    // }\r\n    return (\r\n        <>\r\n            <h2>Gif Expert App</h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n            \r\n            <hr></hr>\r\n\r\n            <ol>\r\n                {\r\n                    categories.map((category,key)=>(\r\n                        <GifGrid \r\n                            key={category}\r\n                            category={category}\r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {GifExpertApp} from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp/>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}